zabbix_export:
  version: '7.0'
  template_groups:
    - uuid: 2da0a4ffce7d409893ce1ec48ead089f
      name: Templates/Modules
  templates:
    - uuid: 3b8da78aa1094701a7ab41bc815ed396
      template: 'Interfaces SNMP IP Address'
      name: 'Interfaces SNMP IP Address'
      groups:
        - name: Templates/Modules
      discovery_rules:
        - uuid: 9da3d75843564a80bffa5aa8c98c28a0
          name: 'Network Interfaces discovery IP Address'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#IFDESCR},1.3.6.1.2.1.2.2.1.2,{#IPADDRESS},1.3.6.1.2.1.4.20.1.1,{#IFINDEX},1.3.6.1.2.1.4.20.1.2]'
          key: 'net.ip.discovery[false]'
          delay: 1h
          item_prototypes:
            - uuid: 5b69187da6e845c8aaef67e600897754
              name: 'IP address for interface({#IFINDEX}) {#IFDESCR}'
              type: SNMP_AGENT
              snmp_oid: '1.3.6.1.2.1.4.20.1.1.{#IPADDRESS}'
              key: 'net.if.ip[{#IFDESCR},{#IPADDRESS}]'
              delay: 1h
              value_type: TEXT
              trends: '0'
              tags:
                - tag: Application
                  value: 'IP Address'
          preprocessing:
            - type: JAVASCRIPT
              parameters:
                - |
                  var data = JSON.parse(value);
                  
                  var combined = {};
                  
                  // First, store all interface descriptions
                  for (var i = 0; i < data.length; i++) {
                    var item = data[i];
                    if (item['{#IFDESCR}']) {
                      combined[item['{#SNMPINDEX}']] = {
                        '{#IFDESCR}': item['{#IFDESCR}']
                      };
                    }
                  }
                  
                  // Then, add IP and IFINDEX data
                  for (var i = 0; i < data.length; i++) {
                    var item = data[i];
                    if (item['{#IPADDRESS}']) {
                      var ifIndex = item['{#IFINDEX}'];
                      if (combined[ifIndex]) {
                        combined[ifIndex]['{#IPADDRESS}'] = item['{#IPADDRESS}'];
                        combined[ifIndex]['{#IFINDEX}'] = item['{#IFINDEX}'];
                      }
                    }
                  }
                  
                  // Convert to an array and filter items with all 3 fields
                  var result = [];
                  for (var index in combined) {
                    if (combined[index]['{#IFDESCR}'] && combined[index]['{#IPADDRESS}'] && combined[index]['{#IFINDEX}']) {
                      result.push(combined[index]);
                    }
                  }
                  
                  // Properly format the JSON string without trailing commas
                  return JSON.stringify(result, null, 2);
      tags:
        - tag: Application
          value: IPAddress
